# https://EditorConfig.org

# top-most EditorConfig file
root = true

# Don't use tabs for indentation.
[*]
indent_style = space
# (Please don't specify an indent_size here; that has too many unintended consequences.)

# Code files
[*.ts]
quote_type = single
ij_typescript_spaces_within_brackets = true
indent_size = 2
insert_final_newline = true
trim_trailing_whitespace = true

[*.md]
max_line_length = off
trim_trailing_whitespace = true

[*.{cs,csx,vb,vbx}]
indent_size = 4
insert_final_newline = false
charset = utf-8
trim_trailing_whitespace = true

# XML project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
indent_size = 2

# XML config files
[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]
indent_size = 2

# JSON files
[*.json]
indent_size = 2

# JSON files
[*.{yml,yaml}]
indent_size = 2
charset = utf-8
insert_final_newline = true
trim_trailing_whitespace = true

# Powershell files
[*.ps1]
indent_size = 2

# Shell script files
[*.sh]
end_of_line = lf
indent_size = 2

# Dotnet code style settings:
[*.{cs,vb}]

# Code style defaults
csharp_using_directive_placement = outside_namespace:suggestion
dotnet_sort_system_directives_first = true
csharp_prefer_static_local_function = true:suggestion
csharp_prefer_simple_using_statement = false:none
csharp_style_prefer_pattern_matching = true:silent
csharp_style_prefer_not_pattern = true:silent
csharp_style_prefer_switch_expression = true:suggestion
csharp_style_prefer_extended_property_pattern = true:silent
dotnet_style_readonly_field = true:suggestion
dotnet_separate_import_directive_groups = false

dotnet_style_namespace_match_folder = true
# Avoid "this." and "Me." if not necessary
dotnet_style_qualification_for_field = false:silent
dotnet_style_qualification_for_property = false:silent
dotnet_style_qualification_for_method = false:silent
dotnet_style_qualification_for_event = false:silent

# Use language keywords instead of framework type names for type references
dotnet_style_predefined_type_for_locals_parameters_members = true:silent
dotnet_style_predefined_type_for_member_access = true:silent

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent

# Suggest more modern language features when available
dotnet_style_object_initializer = true:silent
dotnet_style_collection_initializer = true:silent
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:silent
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_auto_properties = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
csharp_prefer_simple_default_expression = true:silent

# Whitespace options
dotnet_style_allow_multiple_blank_lines_experimental = false:silent

# Non-private static fields are PascalCase
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.severity = error
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.symbols = non_private_static_fields
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.style = non_private_static_field_style

dotnet_naming_symbols.non_private_static_fields.applicable_kinds = field
dotnet_naming_symbols.non_private_static_fields.applicable_accessibilities = public, protected, internal, protected_internal, private_protected
dotnet_naming_symbols.non_private_static_fields.required_modifiers = static

dotnet_naming_style.non_private_static_field_style.capitalization = pascal_case

# Non-private readonly fields are PascalCase
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.severity = error
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.symbols = non_private_readonly_fields
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.style = non_private_readonly_field_style

dotnet_naming_symbols.non_private_readonly_fields.applicable_kinds = field
dotnet_naming_symbols.non_private_readonly_fields.applicable_accessibilities = public, protected, internal, protected_internal, private_protected
dotnet_naming_symbols.non_private_readonly_fields.required_modifiers = readonly

dotnet_naming_style.non_private_readonly_field_style.capitalization = pascal_case

# Constants are PascalCase
dotnet_naming_rule.constants_should_be_pascal_case.severity = error
dotnet_naming_rule.constants_should_be_pascal_case.symbols = constants
dotnet_naming_rule.constants_should_be_pascal_case.style = constant_style

dotnet_naming_symbols.constants.applicable_kinds = field, local
dotnet_naming_symbols.constants.required_modifiers = const

dotnet_naming_style.constant_style.capitalization = pascal_case

# Static fields are camelCase and start with _
dotnet_naming_rule.static_fields_should_be_camel_case.severity = error
dotnet_naming_rule.static_fields_should_be_camel_case.symbols = static_fields
dotnet_naming_rule.static_fields_should_be_camel_case.style = static_field_style

dotnet_naming_symbols.static_fields.applicable_kinds = field
dotnet_naming_symbols.static_fields.required_modifiers = static

dotnet_naming_style.static_field_style.capitalization = camel_case
dotnet_naming_style.static_field_style.required_prefix = _

# Instance fields are camelCase and start with _
dotnet_naming_rule.instance_fields_should_be_camel_case.severity = error
dotnet_naming_rule.instance_fields_should_be_camel_case.symbols = instance_fields
dotnet_naming_rule.instance_fields_should_be_camel_case.style = instance_field_style

dotnet_naming_symbols.instance_fields.applicable_kinds = field

dotnet_naming_style.instance_field_style.capitalization = camel_case
dotnet_naming_style.instance_field_style.required_prefix = _

# Locals are camelCase
dotnet_naming_rule.locals_should_be_camel_case.severity = error
dotnet_naming_rule.locals_should_be_camel_case.symbols = locals
dotnet_naming_rule.locals_should_be_camel_case.style = camel_case_style

dotnet_naming_symbols.locals.applicable_kinds = local

dotnet_naming_style.camel_case_style.capitalization = camel_case

# Parameters are camelCase
dotnet_naming_rule.parameters_should_be_camel_case.severity = suggestion
dotnet_naming_rule.parameters_should_be_camel_case.symbols = parameters
dotnet_naming_rule.parameters_should_be_camel_case.style = camel_case_style

dotnet_naming_symbols.parameters.applicable_kinds = parameter

# Local functions are PascalCase
dotnet_naming_rule.local_functions_should_be_pascal_case.severity = error
dotnet_naming_rule.local_functions_should_be_pascal_case.symbols = local_functions
dotnet_naming_rule.local_functions_should_be_pascal_case.style = local_function_style

dotnet_naming_symbols.local_functions.applicable_kinds = local_function

dotnet_naming_style.local_function_style.capitalization = pascal_case

# By default, name items with PascalCase
dotnet_naming_rule.members_should_be_pascal_case.severity = error
dotnet_naming_rule.members_should_be_pascal_case.symbols = all_members
dotnet_naming_rule.members_should_be_pascal_case.style = pascal_case_style

dotnet_naming_symbols.all_members.applicable_kinds = *

dotnet_naming_style.pascal_case_style.capitalization = pascal_case

# Simplify name IDE0001: 'System.IO.FileInfo' can be simplified to 'FileInfo'
dotnet_diagnostic.IDE0001.severity = error

# Simplify member access IDE0002: 'C.M1' can be simplified to 'M1'
dotnet_diagnostic.IDE0002.severity = error

# IDE0003: Remove this and Me preferences
dotnet_diagnostic.IDE0003.severity = error

# Remove unnecessary cast
dotnet_diagnostic.IDE0004.severity = error

# Remove unnecessary using directives
dotnet_diagnostic.IDE0005.severity = error

# IDE0010: Add missing cases to switch statement
dotnet_diagnostic.IDE0010.severity = none

# IDE0011: Add braces
dotnet_diagnostic.IDE0011.severity = error

# IDE0017: Use object initializers
dotnet_diagnostic.IDE0017.severity = error

# IDE0018: Inline variable declaration
dotnet_diagnostic.IDE0018.severity = error

# IDE0019: Use pattern matching to avoid 'as' followed by a 'null' check
dotnet_diagnostic.IDE0019.severity = error

# Use pattern matching to avoid 'is' check followed by a cast
dotnet_diagnostic.IDE0020.severity = error
dotnet_diagnostic.IDE0038.severity = error

# Use collection initializers
# disabled to due to bug in dotnet format https://github.com/dotnet/format/issues/1500
# return to error after projects migration to net8
dotnet_diagnostic.IDE0028.severity = none

# Use auto-implemented property
dotnet_diagnostic.IDE0032.severity = error

# Use explicitly provided tuple name
dotnet_diagnostic.IDE0033.severity = error

# IDE0035: Remove unreachable code
dotnet_diagnostic.IDE0035.severity = error

# IDE0036: Order modifiers
dotnet_diagnostic.IDE0036.severity = error

# IDE0040: Add accessibility modifiers
dotnet_diagnostic.IDE0040.severity = error

# IDE0043: Format string contains invalid placeholder
dotnet_diagnostic.IDE0043.severity = error

# IDE0044: Make field readonly
dotnet_diagnostic.IDE0044.severity = warning

# Use language keywords instead of framework type names for type references
dotnet_diagnostic.IDE0049.severity = error

# CONSIDER: Are IDE0051 and IDE0052 too noisy to be warnings for IDE editing scenarios? Should they be made build-only warnings?
# IDE0051: Remove unused private member
dotnet_diagnostic.IDE0051.severity = warning

# IDE0052: Remove unread private member
dotnet_diagnostic.IDE0052.severity = error

# IDE0055: Fix formatting
dotnet_diagnostic.IDE0055.severity = error

# IDE0058 Remove unnecessary expression value
dotnet_diagnostic.IDE0058.severity = none

# IDE0059: Unnecessary assignment to a value
dotnet_diagnostic.IDE0059.severity = error

# IDE0060: Remove unused parameter
dotnet_diagnostic.IDE0060.severity = error

# IDE0079: Remove unnecessary suppression
dotnet_diagnostic.IDE0079.severity = error

# IDE0080 Remove unnecessary suppression operator
dotnet_diagnostic.IDE0080.severity = error

# Convert typeof.Name to nameof
dotnet_diagnostic.IDE0082.severity = error

# Use pattern matching (not operator)
dotnet_diagnostic.IDE0083.severity = error

# IDE0100: Remove unnecessary equality operator
dotnet_diagnostic.IDE0100.severity = error

# IDE0110: Remove unnecessary discard
dotnet_diagnostic.IDE0110.severity = error

# Simplify property pattern
dotnet_diagnostic.IDE0170.severity = error

# dotnet_style_allow_multiple_blank_lines_experimental
dotnet_diagnostic.IDE2000.severity = error

# csharp_style_allow_embedded_statements_on_same_line_experimental
dotnet_diagnostic.IDE2001.severity = warning

# csharp_style_allow_blank_lines_between_consecutive_braces_experimental
dotnet_diagnostic.IDE2002.severity = warning

# dotnet_style_allow_statement_immediately_after_block_experimental
dotnet_diagnostic.IDE2003.severity = warning

# csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental
dotnet_diagnostic.IDE2004.severity = warning

# RS0016: Only enable if API files are present
dotnet_public_api_analyzer.require_api_files = true

# error RS2008: Enable analyzer release tracking for the analyzer project containing rule '{0}'
dotnet_diagnostic.RS2008.severity = none

# CA1012: Abstract types should not have public constructors
dotnet_diagnostic.CA1012.severity = error

# CA1822: Make member static
dotnet_diagnostic.CA1822.severity = suggestion

# CSharp code style settings:
[*.cs]
# Newline settings
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true:silent
csharp_new_line_before_members_in_anonymous_types = true:silent
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left

csharp_style_namespace_declarations = file_scoped:silent
csharp_style_implicit_object_creation_when_type_is_apparent = true:silent

# Whitespace options
csharp_style_allow_embedded_statements_on_same_line_experimental = false
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = false
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = false

# Prefer "var" everywhere
csharp_style_var_for_built_in_types = true:silent
csharp_style_var_when_type_is_apparent = true:silent
csharp_style_var_elsewhere = true:silent

# Expression-bodied members
csharp_style_expression_bodied_methods = false:silent
csharp_style_expression_bodied_constructors = false:silent
csharp_style_expression_bodied_operators = false:silent
csharp_style_expression_bodied_properties = true:silent
csharp_style_expression_bodied_indexers = true:silent
csharp_style_expression_bodied_accessors = true:silent
csharp_style_expression_bodied_lambdas = true:silent
csharp_style_expression_bodied_local_functions = true:suggestion

# Prefer property-like constructs to have an expression-body
csharp_style_expression_bodied_properties = true:none
csharp_style_expression_bodied_indexers = true:none
csharp_style_expression_bodied_accessors = true:none

# Pattern matching
csharp_style_pattern_matching_over_is_with_cast_check = true:silent
csharp_style_pattern_matching_over_as_with_null_check = true:silent
csharp_style_inlined_variable_declaration = true:silent

# Null checking preferences
csharp_style_throw_expression = true:suggestion
csharp_style_conditional_delegate_call = true:suggestion

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = do_not_ignore
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Blocks are allowed
csharp_prefer_braces = when_multiline:silent
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = false:dotnet_style_predefined_type_for_locals_parameters_members

# Currently only enabled for C# due to crash in VB analyzer.  VB can be enabled once
# https://github.com/dotnet/roslyn/pull/54259 has been published.
dotnet_style_allow_statement_immediately_after_block_experimental = false

# XML comment analysis is disabled due to project configuration
dotnet_diagnostic.SA0001.severity = None
# Prefix local calls with this
dotnet_diagnostic.SA1101.severity = None
# Using directive should appear within a namespace declaration
dotnet_diagnostic.SA1200.severity = None
# Static members should appear before non-static members
dotnet_diagnostic.SA1204.severity = None
# Field should not begin with an underscore
dotnet_diagnostic.SA1309.severity = None
# UseTrailingCommasInMultiLineInitializers
dotnet_diagnostic.SA1413.severity = None
# File may not end with a newline character
dotnet_diagnostic.SA1518.severity = None
# Elements should be documented
dotnet_diagnostic.SA1600.severity = None
# Enumeration items should be documented
dotnet_diagnostic.SA1602.severity = None
# The file header is missing or not located at the top of the file
dotnet_diagnostic.SA1633.severity = None

# Complete the task associated to this to do comment
dotnet_diagnostic.S1135.severity = None
# Unused private types or members should be removed
dotnet_diagnostic.S1144.severity = None
# Logging in a catch clause should pass the caught exception as a parameter
dotnet_diagnostic.S6667.severity = None